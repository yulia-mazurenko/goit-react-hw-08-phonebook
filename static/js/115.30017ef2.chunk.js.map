{"version":3,"file":"static/js/115.30017ef2.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","redux/features/contacts/selectors.js","components/Error/Error.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/FormError.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.js","pages/ContactsPage.jsx","pages/Pages.styled.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactData = styled.p`\n  @media screen and (max-width: 320px) {\n    font-size: 12px;\n  }\n\n  @media screen and (min-width: 321px) and (max-width: 767) {\n    font-size: 18px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Avatar, Box, Button, List, ListItem } from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\n\nimport { deleteContact } from '../../redux/features/contacts/contactsOperations';\nimport { ContactData } from './ContactItem.styled';\n\nconst ContactItem = ({ contactName, number, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <List>\n      <ListItem\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          gap={3}\n        >\n          <Avatar bg=\"yellow.300\" size={'xs'} />\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <ContactData>{contactName}:</ContactData>\n            <ContactData>{number}</ContactData>\n          </Box>\n        </Box>\n\n        <Button\n          type=\"button\"\n          variant=\"ghost\"\n          colorScheme=\"blue\"\n          rightIcon={<DeleteIcon />}\n          cursor=\"pointer\"\n          onClick={() => dispatch(deleteContact(id))}\n        ></Button>\n      </ListItem>\n    </List>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  contactName: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","export const selectFilteredContacts = state => {\n  const normalizedFilter = state.contacts.filter.toLowerCase();\n\n  return state.contacts.contacts.items.filter(contact => {\n    return contact.name.toLowerCase().includes(normalizedFilter);\n  });\n};\n\nexport const selectLoadingStatus = state => state.contacts.contacts.isLoading;\nexport const selectErrorStatus = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n","export const Error = () => {\n  return (\n    <div>\n      <p>\n        Something went wrong :(\n        <br />\n        Try again\n      </p>\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Spinner } from '@chakra-ui/react';\n\nimport ContactItem from '../ContactItem/ContactItem';\nimport {\n  selectFilteredContacts,\n  selectLoadingStatus,\n  selectErrorStatus,\n} from '../../redux/features/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/features/contacts/contactsOperations';\nimport { Error } from 'components/Error/Error';\n\nconst ContactList = () => {\n  const filteredFriends = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectLoadingStatus);\n  const error = useSelector(selectErrorStatus);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ul>\n        {filteredFriends?.map(({ name, number, id }) => (\n          <ContactItem key={id} id={id} contactName={name} number={number} />\n        ))}\n      </ul>\n\n      {isLoading && <Spinner />}\n      {error && <Error />}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { Box, Input } from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/features/contacts/selectors';\nimport { filterContacts } from '../../redux/features/contacts/contactsSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"flex-start\"\n      justifyContent=\"space-around\"\n      gap={2}\n      w=\"200px\"\n      as=\"label\"\n    >\n      Find contacts by name:\n      <Input\n        type=\"text\"\n        size=\"sm\"\n        value={filter}\n        borderColor=\"rgba(238, 238, 8, 1)\"\n        onChange={e => dispatch(filterContacts(e.currentTarget.value))}\n      />\n    </Box>\n  );\n};\n\nexport default Filter;\n","import { ErrorMessage } from 'formik';\n\nconst FormError = ({ name }) => {\n  return <ErrorMessage name={name} render={message => <p>{message}</p>} />;\n};\nexport default FormError;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\nimport MaskedInput from 'react-text-mask';\n\nexport const FormStyle = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 250px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 4px;\n`;\n\nexport const Input = styled(Field)`\n  width: 250px;\n  padding-left: 8px;\n  padding-right: 8px;\n  box-sizing: border-box;\n  border: 1px solid;\n  border-color: rgba(238, 238, 8, 1);\n  border-radius: 5px;\n  font-family: Roboto, sans-serif;\n\n  ::placeholder {\n    font-size: 12px;\n  }\n\n  &:focus,\n  &:hover,\n  &:active {\n    outline: 0;\n    border: 2px solid;\n    border-color: rgba(66, 153, 225, 0.6);\n  }\n`;\n\nexport const InputNumber = styled(MaskedInput)`\n  width: 250px;\n  padding-left: 8px;\n  padding-right: 8px;\n  box-sizing: border-box;\n  border: 1px solid;\n  border-color: rgba(238, 238, 8, 1);\n  border-radius: 5px;\n  font-family: Roboto, sans-serif;\n\n  &:focus,\n  &:hover,\n  &:active {\n    outline: 0;\n    border: 2px solid;\n    border-color: rgba(66, 153, 225, 0.6);\n  }\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Field, Formik } from 'formik';\nimport * as yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { Button } from '@chakra-ui/react';\n\nimport FormError from './FormError';\nimport { addContact } from '../../redux/features/contacts/contactsOperations';\nimport { FormStyle, Label, Input, InputNumber } from './ContactForm.styled';\n\nconst phoneNumberMask = [\n  '(',\n  /[0-9]/,\n  /\\d/,\n  /\\d/,\n  ')',\n  ' ',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '-',\n  /\\d/,\n  /\\d/,\n  '-',\n  /\\d/,\n  /\\d/,\n];\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Please, enter correct name'),\n  number: yup\n    .string()\n    .required('Please, check the correctness of phone number'),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport default function ContactForm({ onClose }) {\n  const contactId = nanoid();\n  const contactNumberIid = nanoid();\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = (values, { resetForm }) => {\n    const uppercaseName = values.name\n      .split(' ')\n      .map(word => word[0].toUpperCase() + word.slice(1, word.length))\n      .join(' ');\n\n    dispatch(addContact({ ...values, name: uppercaseName }));\n\n    resetForm();\n    onClose();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleFormSubmit}\n    >\n      <FormStyle>\n        <Label htmlFor={contactId}>\n          Name\n          <Input\n            placeholder=\"John Snow\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            id={contactId}\n            required\n          />\n          <FormError name=\"name\" />\n        </Label>\n        <Label htmlFor={contactNumberIid}>\n          Number\n          <Field name=\"number\">\n            {({ field }) => (\n              <InputNumber\n                id={contactNumberIid}\n                required\n                type=\"tel\"\n                mask={phoneNumberMask}\n                {...field}\n                placeholder=\"(___) ___-__-__\"\n              />\n            )}\n          </Field>\n          <FormError name=\"number\" />\n        </Label>\n        <Button\n          type=\"submit\"\n          colorScheme=\"yellow\"\n          mt={2}\n          ml=\"auto\"\n          mr=\"auto\"\n          w=\"150px\"\n        >\n          Save contact\n        </Button>\n      </FormStyle>\n    </Formik>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ModalBackDrop = styled.div`\n  @media screen and (max-width: 479px) {\n    position: fixed;\n    width: 600px;\n    height: 600px;\n  }\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  z-index: 99;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  right: 0;\n  margin-right: auto;\n  margin-left: auto;\n  background-color: rgb(190 197 203 / 88%); ;\n`;\n\nexport const Modal = styled.div`\n  @media screen and (max-width: 479px) {\n    position: fixed;\n    top: 25%;\n  }\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  z-index: 999;\n  width: 350px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 18px;\n  font-weight: bold;\n  text-align: center;\n  padding-bottom: 20px;\n  border-radius: 10px;\n  outline: 1px solid rgba(66, 153, 225, 0.6);\n  background-color: #ffffff;\n`;\n\nexport const ModalCloseButton = styled.button`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n`;\n\nexport const ModalTitle = styled.h2`\n  padding-top: 16px;\n  padding-bottom: 8px;\n  color: #3950af;\n  text-align: center;\n`;\n","import { MdOutlineClose } from 'react-icons/md';\n\nimport ContactForm from 'components/ContactForm';\nimport {\n  ModalBackDrop,\n  ModalCloseButton,\n  Modal,\n  ModalTitle,\n} from './Modal.styled';\n\nexport function ModalWindow({ onToggle }) {\n  return (\n    <ModalBackDrop>\n      <Modal>\n        <ModalTitle>Create new contact</ModalTitle>\n        <ContactForm onClose={onToggle} />\n        <ModalCloseButton aria-label=\"close\" onClick={onToggle}>\n          <MdOutlineClose />\n        </ModalCloseButton>\n      </Modal>\n    </ModalBackDrop>\n  );\n}\n","import { Box, Button, Heading, Text } from '@chakra-ui/react';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from 'components/Filter';\nimport { ModalWindow } from 'components/Modal/Modal';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/features/contacts/selectors';\nimport { useState } from 'react';\nimport { BsPersonPlus } from 'react-icons/bs';\nimport { Delimiter, WrapperContactsCard } from './Pages.styled';\n\nconst ContactsPage = () => {\n  const filteredFriends = useSelector(selectFilteredContacts);\n  const [isShownModal, setIsShownModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsShownModal(!isShownModal);\n  };\n\n  return (\n    <>\n      <Heading size=\"lg\" textAlign=\"center\" pt={2} pb={4}>\n        PhoneBook\n      </Heading>\n      <Delimiter />\n      <WrapperContactsCard>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          mb={5}\n          mt={3}\n          gap={5}\n        >\n          <Button\n            type=\"button\"\n            onClick={toggleModal}\n            colorScheme=\"yellow\"\n            mt={2}\n            ml=\"auto\"\n            mr=\"auto\"\n            w=\"180px\"\n            gap=\"8px\"\n          >\n            <BsPersonPlus />\n            <Text>Add new contact</Text>\n          </Button>\n          {isShownModal && <ModalWindow onToggle={toggleModal} />}\n          <Filter />\n        </Box>\n\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          pb={3}\n        >\n          {filteredFriends.length > 0 ? (\n            <Heading size=\"md\" py={2}>\n              Contacts\n            </Heading>\n          ) : (\n            <Text>No contacts</Text>\n          )}\n\n          <ContactList />\n        </Box>\n      </WrapperContactsCard>\n    </>\n  );\n};\n\nexport default ContactsPage;\n","import { Card } from '@chakra-ui/react';\nimport styled from '@emotion/styled';\n\nexport const WrapperCard = styled(Card)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\n    0px 2px 2px rgba(0, 0, 0, 0.12);\n\n  @media screen and (max-width: 320px) {\n    width: 320px;\n  }\n  @media screen and (min-width: 321px) and (max-width: 479px) {\n    width: 100%;\n  }\n  @media screen and (min-width: 481px) and (max-width: 767px) {\n    width: 600px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 600px;\n  }\n`;\n\nexport const WrapperContactsCard = styled(Card)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-around;\n  box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\n    0px 2px 2px rgba(0, 0, 0, 0.12);\n\n  @media screen and (max-width: 320px) {\n    flex-direction: column;\n    width: 320px;\n  }\n  @media screen and (min-width: 321px) and (max-width: 479px) {\n    flex-direction: column;\n    width: 100%;\n  }\n  @media screen and (min-width: 481px) and (max-width: 767px) {\n    width: 600px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 600px;\n  }\n`;\n\nexport const Delimiter = styled.hr`\n  border: 1px solid rgba(66, 153, 225, 0.6);\n  @media screen and (max-width: 320px) {\n    width: 320px;\n  }\n  @media screen and (min-width: 321px) and (max-width: 479px) {\n    width: 100%;\n  }\n  @media screen and (min-width: 481px) and (max-width: 767px) {\n    width: 600px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 600px;\n  }\n`;\n"],"names":["ContactData","styled","contactName","number","id","dispatch","useDispatch","display","alignItems","justifyContent","gap","bg","size","type","variant","colorScheme","rightIcon","cursor","onClick","deleteContact","selectFilteredContacts","state","normalizedFilter","contacts","filter","toLowerCase","items","contact","name","includes","selectLoadingStatus","isLoading","selectErrorStatus","error","selectFilter","Error","filteredFriends","useSelector","useEffect","fetchContacts","map","flexDirection","w","as","I","value","borderColor","onChange","e","filterContacts","currentTarget","render","message","FormStyle","Form","Label","Input","Field","InputNumber","MaskedInput","phoneNumberMask","schema","yup","shape","required","initialValues","ContactForm","onClose","contactId","nanoid","contactNumberIid","validationSchema","onSubmit","values","resetForm","uppercaseName","split","word","toUpperCase","slice","length","join","addContact","htmlFor","placeholder","pattern","title","field","mask","mt","ml","mr","ModalBackDrop","Modal","ModalCloseButton","ModalTitle","ModalWindow","onToggle","useState","isShownModal","setIsShownModal","toggleModal","textAlign","pt","pb","mb","py","WrapperCard","Card","WrapperContactsCard","Delimiter"],"sourceRoot":""}